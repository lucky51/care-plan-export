// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/file": {
            "get": {
                "description": "输入参数大小写敏感.",
                "produces": [
                    "application/octet-stream"
                ],
                "summary": "照护执行计划查询并导出excel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "住户ID",
                        "name": "residentId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "租户ID",
                        "name": "tenantId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "开始日期",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "结束日期",
                        "name": "endDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "照护执行计划excel生成-服务端转发",
                "parameters": [
                    {
                        "description": "JSON",
                        "name": "postJson",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/modals.OuterInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "modals.BasicInfo": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "bedCode": {
                    "type": "string"
                },
                "birthOfDate": {
                    "type": "string"
                },
                "careLevel": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer"
                },
                "customerName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "inCode": {
                    "type": "string"
                },
                "inDate": {
                    "type": "string"
                },
                "inStartDate": {
                    "type": "string"
                },
                "roomCode": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "modals.OuterInput": {
            "type": "object",
            "properties": {
                "basicInfo": {
                    "type": "object",
                    "$ref": "#/definitions/modals.BasicInfo"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modals.OuterItem"
                    }
                },
                "sheetName": {
                    "type": "string"
                }
            }
        },
        "modals.OuterItem": {
            "type": "object",
            "properties": {
                "date1": {
                    "type": "string"
                },
                "date2": {
                    "type": "string"
                },
                "date3": {
                    "type": "string"
                },
                "date4": {
                    "type": "string"
                },
                "date5": {
                    "type": "string"
                },
                "date6": {
                    "type": "string"
                },
                "date7": {
                    "type": "string"
                },
                "dayItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modals.RecordItem"
                    }
                },
                "monthItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modals.RecordItem"
                    }
                },
                "tempItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modals.RecordItem"
                    }
                },
                "unItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modals.RecordItem"
                    }
                },
                "week": {
                    "type": "integer"
                },
                "weekItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modals.RecordItem"
                    }
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "modals.RecordItem": {
            "type": "object",
            "properties": {
                "cycleType": {
                    "type": "integer"
                },
                "execDate": {
                    "type": "string"
                },
                "formatDate": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "recordType": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                },
                "servicePeriod": {
                    "type": "string"
                },
                "serviceState": {
                    "type": "integer"
                },
                "signature": {
                    "type": "string"
                },
                "strweek": {
                    "type": "string"
                },
                "week": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
